/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pkg2048finalproject;
import java.io.*;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author George-Kirollos Saad
 * Date : August 21, 2018
 * The is the JFrame file for the game over screen.
 * 
 */
public class GameOverScreen extends javax.swing.JFrame {
    //Creates ArrayLists to store scores and player names.
    ArrayList<String> listNames = new ArrayList<String>();
    ArrayList<Integer> listScore = new ArrayList<Integer>();
    ArrayList<String> listHighScore = new ArrayList<String>();
    
    /**
     * Performs a search of the scores list to find the value being searched for.
     * @param intSearch as an integer. This is the value being searched for.
     */
    public void linearSearch(int intSearch){
        listHighScore.clear();
        //Searches the list for the valeu being looked for.
        for (int i = 0; i < listScore.size(); i++){
            if (listScore.get(i) == intSearch){
                listHighScore.add(listNames.get(i));
            }
        }
    }
    /**
     * The function uses the bubble sort algorithm to sort the score and names ArrayLists.
     */
    public void bubbleSort(){
        int intCounter = 1;
        //Loops until no swaps are made.
        while (intCounter > 0){
            intCounter = 0;
            //Loops through the list, comparing each item with the oen next, placing the larger item first.
            for (int i = 0; i < listScore.size() - 1; i++){
                if (listScore.get(i) < listScore.get(i + 1)){
                    intCounter++;
                    //Swap values with neighbouring index in scores list and names list.
                    int intTemp = listScore.get(i);
                    listScore.set(i, listScore.get(i + 1));
                    listScore.set(i + 1, intTemp);
                    String strTemp = listNames.get(i);
                    listNames.set(i, listNames.get(i + 1));
                    listNames.set(i + 1, strTemp);
                }
            }
        }
    }
    
    /**
     * Creates new form GameOverScreen
     */
    public GameOverScreen() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelMain = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        lblDes = new javax.swing.JLabel();
        btnReset = new javax.swing.JButton();
        lblLeaderboard = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtOutput = new javax.swing.JTextArea();
        txtName = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        btnList = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelMain.setBackground(new java.awt.Color(204, 204, 255));
        panelMain.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        lblTitle.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 36)); // NOI18N
        lblTitle.setForeground(new java.awt.Color(51, 0, 153));
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Game Over!");

        lblDes.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblDes.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDes.setText("Enter your name to save your score, or click List to show the leaderboard.");

        btnReset.setText("Restart Game");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        lblLeaderboard.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblLeaderboard.setText("Leaderboard: ");

        txtOutput.setColumns(20);
        txtOutput.setRows(5);
        jScrollPane1.setViewportView(txtOutput);

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnList.setText("List");
        btnList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelMainLayout = new javax.swing.GroupLayout(panelMain);
        panelMain.setLayout(panelMainLayout);
        panelMainLayout.setHorizontalGroup(
            panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelMainLayout.createSequentialGroup()
                        .addGroup(panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnReset)
                            .addComponent(lblLeaderboard))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(panelMainLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelMainLayout.createSequentialGroup()
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSave)
                        .addGap(26, 26, 26)
                        .addComponent(btnList))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 429, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelMainLayout.setVerticalGroup(
            panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMainLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblDes, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReset)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSave)
                    .addComponent(btnList, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblLeaderboard)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 361, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelMain, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelMain, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        //Creats a new main game object (launches the game GUI).
        MainGame mainScreen = new MainGame();
        mainScreen.setVisible(true);
        //Closes the current GUI screen.
        this.dispose();
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        //Checks the score saved by the main game in a file.
        try{
            //Opens the file to read it.
            FileReader fileReader = new FileReader("score.txt");
            BufferedReader bReader = new BufferedReader(fileReader);
            
            //Stores the score saved by the main game in the score text file.
            int intScore = Integer.parseInt(bReader.readLine());
            
            //Adds name and score to leaderboard file.
            FileWriter fileWriter = new FileWriter("leaderboard.txt", true);
            PrintWriter printWriter = new PrintWriter(fileWriter);
            printWriter.write(txtName.getText() + "\n");
            printWriter.write(intScore + "\n");
            printWriter.close();
        } 
        catch (FileNotFoundException ex) {
            Logger.getLogger(GameOverScreen.class.getName()).log(Level.SEVERE, null, ex);
        } 
        catch (IOException ex) {
            Logger.getLogger(GameOverScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //Disables button lcik after save, to prevent users from saving mutliple times.
        btnSave.setEnabled(false);
    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void btnListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListActionPerformed
        // TODO add your handling code here:
        //Get names and scores from leaderboard file.
        try{
            FileReader fileReader = new FileReader("leaderboard.txt");
            BufferedReader bReader = new BufferedReader(fileReader);
            String strLine = bReader.readLine();
            listNames.clear();
            listScore.clear();
            int intCounter = 0;
            //Reads the leaderboard file linr by line to add names and scores to ArrayLists.
            while (strLine != null){
                if (intCounter % 2 == 0){
                    listNames.add(strLine);
                }
                else {
                    listScore.add(Integer.parseInt(strLine));
                }
                intCounter++;
                strLine = bReader.readLine();
            }
            //Closes the leaderboard text file.
            bReader.close();
        } 
        catch (FileNotFoundException ex) {
            Logger.getLogger(GameOverScreen.class.getName()).log(Level.SEVERE, null, ex);
        } 
        catch (IOException ex) {
            Logger.getLogger(GameOverScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //Calls the function to sort the score and names lists.
        bubbleSort();
        
        txtOutput.setText("Highest Scorers: \n");
        //Calls the function that searches for people with the high score and outputs them.
        if (listScore.size() > 0){
            linearSearch(listScore.get(0));
        }
        for (int i = 0; i < listHighScore.size(); i++){
            txtOutput.append(listHighScore.get(i) + "\n");
        }
        
        //Output leaderboard to output box.
        txtOutput.append("\nLeaderboard: \n");
        for (int i = 0; i < listScore.size(); i++){
            txtOutput.append(listNames.get(i) + "'s score is " + listScore.get(i) + ". \n");
        }
    }//GEN-LAST:event_btnListActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameOverScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameOverScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameOverScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameOverScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameOverScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnList;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSave;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDes;
    private javax.swing.JLabel lblLeaderboard;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JPanel panelMain;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextArea txtOutput;
    // End of variables declaration//GEN-END:variables
}
